rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
# title=c("syntax Alignment"),
digits = 3) +
labs(title = "Semantic Alignment",
subtitle = "Linear Mixed Effects")
# pz.s = pz.s + ylim(.5, 3) +
pz.s = pz.s +
geom_hline(yintercept=0, linetype=3) +
theme_bw() +
theme(
plot.title=element_text(size=16,face="bold"), # theme_light()
axis.text.y=element_text(size=12),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pz.s
pz.s = pz.s + ylim(-0.5, 0.5) +
# pz.s = pz.s +
geom_hline(yintercept=0, linetype=3) +
theme_bw() +
theme(
plot.title=element_text(size=16,face="bold"), # theme_light()
axis.text.y=element_text(size=12),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pz.s
pz.s = pz.s + ylim(-0.25, 0.25) +
# pz.s = pz.s +
geom_hline(yintercept=0, linetype=3) +
theme_bw() +
theme(
plot.title=element_text(size=16,face="bold"), # theme_light()
axis.text.y=element_text(size=12),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pz.s
pz.s = pz.s + ylim(-0.1, 0.1) +
# pz.s = pz.s +
geom_hline(yintercept=0, linetype=3) +
theme_bw() +
theme(
plot.title=element_text(size=16,face="bold"), # theme_light()
axis.text.y=element_text(size=12),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pz.s
knitr::opts_chunk$set(echo = TRUE)
# rm(list=ls())
library(tidyverse)
library(pander)
main.data = read.csv("../Data/Step1_PrepareFeatures.csv")
source("../R_Helper/Step3_helper.R")
main.data.20 = variable_prep(main.data)
pander(names(main.data.20))
# head(main.data.20)
library(lme4) ## for lmer
library(parameters)
library(strengejacke) ## for tab_model and plot_model
library(parameters)
library(lmtest) ## for lrtest
library(bbmle) ## for AICtab
summary(main.data.20$semantic)
hist(main.data.20$semantic)
knitr::opts_chunk$set(echo = TRUE)
# rm(list=ls())
library(tidyverse)
library(pander)
main.data = read.csv("../Data/Step1_PrepareFeatures.csv")
# test1 = main.data %>%
#   group_by(Team, School, Block, Level, revisited) %>%
#   filter(n() >= 20) %>%
#   ungroup()
#
# ## remove extraordinarily long single utterances (removes 282 rows, or (282/34294)*100, or less than 1%)
# ## why 71? Because this is 5SDs above mean of utterlen: mean(main.data$utterlen_aligner)+(5*sd(main.data$utterlen_aligner))
# test2 = test1 %>% filter(utterlen_aligner < 71 & utterlen_target < 71)
source("../R_Helper/Step3_helper.R")
main.data.20 = variable_prep(main.data)
pander(names(main.data.20))
# head(main.data.20)
g1 = main.data.20 %>% select(lexical, syntax, semantic) %>% pivot_longer(lexical:semantic, "align") %>% mutate(align=factor(align)) %>% mutate(align=fct_relevel(align, c("lexical", "syntax", "semantic")))
align.labels = c("Lexical", "Syntax", "Semantic")
names(align.labels) = c("lexical", "syntax", "semantic")
ggplot(g1, aes(x=value))+
geom_histogram(binwidth=0.05)+
facet_wrap(~align, labeller = labeller(align = align.labels), scales = "free")+
labs(title="Distribution of Lexical Alignment Scores",x="Align Value (Cosine)", y = "Frequency") +
theme_bw()
g1 = main.data.20 %>% select(lexical, syntax, semantic)
head(g1)
head(main.data.20)
# library(glmmTMB) ## no longer using
library(lme4) ## for glmer
library(strengejacke) ## for tab_model and plot_model
library(parameters)
library(lmtest) ## for lrtest
library(bbmle) ## for AICtab
GHM.data.20 = main.data.20 %>% mutate(non_zero_lex = ifelse(lexical > 0, 1, 0))
z1.glmer1 <- glmer(non_zero_lex ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept + (1|subject_id), binomial(link = "logit"), data = GHM.data.20)
z1.glmer2 <- glmer(non_zero_lex ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept + (aligner_role|subject_id), binomial(link = "logit"), data = GHM.data.20)
# Method 1: AICtab
AICtab(z1.glmer1,z1.glmer2,logLik=TRUE)
#Method 2: lrtest
lrtest(z1.glmer1,z1.glmer2)
# Method 3: by hand
logLik(z1.glmer1)
logLik(z1.glmer2)
G2 = -2 * logLik(z1.glmer1) + 2 * logLik(z1.glmer2)
pchisq(as.numeric(G2), df=1, lower.tail=F)
# It appears that the more complex random effects structure explains slightly more variance.
summary(z1.glmer2)
z1.glm2 <- glm(non_zero_lex ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept, binomial(link = "logit"), data = GHM.data.20)
# Method 1: AICtab
AICtab(z1.glm2,z1.glmer2,logLik=TRUE)
performance::icc(z1.glmer2)
z1.glmer2.null <- glmer(non_zero_lex ~ 1 + (aligner_role|subject_id), binomial(link = "logit"), data = GHM.data.20)
# Method 1: AICtab
AICtab(z1.glmer2.null,z1.glmer2,logLik=TRUE)
#Method 2: lrtest
lrtest(z1.glmer2.null,z1.glmer2)
model_parameters(z1.glmer2, exponentiate = T, digits=3)
# VarCorr(z1.glmer2)
g1.glmer1 <- glmer(lexical ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept + (1|subject_id), family = Gamma(link = log), data = subset(GHM.data.20, non_zero_lex == 1), control=glmerControl(optimizer="bobyqa"))
g1.glmer2 <- glmer(lexical ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept + (aligner_role|subject_id), family = Gamma(link = log), data = subset(GHM.data.20, non_zero_lex == 1), control=glmerControl(optimizer="bobyqa"))
# Method 1: AICtab
AICtab(g1.glmer1,g1.glmer2,logLik=TRUE)
#Method 2: lrtest
lrtest(g1.glmer1,g1.glmer2)
# Method 3: by hand
logLik(g1.glmer1)
logLik(g1.glmer2)
G2 = -2 * logLik(g1.glmer1) + 2 * logLik(g1.glmer2)
pchisq(as.numeric(G2), df=1, lower.tail=F)
# It appears that the more complex random effects structure explains slightly more variance.
summary(g1.glmer2)
g1.glm2 <- glm(lexical ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept, family = Gamma(link = log), data = subset(GHM.data.20, non_zero_lex == 1))
# Method 1: AICtab
AICtab(g1.glm2,g1.glmer2,logLik=TRUE)
performance::icc(g1.glmer2)
g1.glmer2.null <- glmer(lexical ~ 1 + (aligner_role|subject_id), family = Gamma(link = log), data = subset(GHM.data.20, non_zero_lex == 1), control=glmerControl(optimizer="bobyqa"))
# Method 1: AICtab
AICtab(g1.glmer2.null,g1.glmer2,logLik=TRUE)
#Method 2: lrtest
lrtest(g1.glmer2.null,g1.glmer2)
model_parameters(g1.glmer2, exponentiate = T, digits=3)
# VarCorr(g1.glmer2)
# library(jtools)
# summ(g1.glmer2,confint = TRUE, digits = 3, vifs = TRUE)
pz.l = plot_model(z1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
# title=c("Lexical Alignment"),
digits = 3) +
labs(title = "Lexical Alignment",
subtitle = "Binomial Logistic Mixed Effects")
pz.l = pz.l + ylim(.5, 2.5) +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(
plot.title=element_text(size=16,face="bold"), # theme_light()
axis.text.y=element_text(size=12),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pz.l
pg.l = plot_model(g1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
title=c(""),
digits = 3) +
labs(title = "",
subtitle = "Gamma Mixed Effects",
caption = expression(paste("Significance: ***", italic("p"), "<.001, **", italic("p"), "<.001")))
pg.l = pg.l + ylim(.85, 1.15) +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(plot.title=element_text(size=16,face="bold"), # theme_light()
# axis.text.y=element_text(size=12),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
# plot.caption = element_text(hjust = 0),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pg.l
library(patchwork)
pz.l + pg.l
ggsave("histogram")
g1 = main.data.20 %>% select(lexical, syntax, semantic) %>% pivot_longer(lexical:semantic, "align") %>% mutate(align=factor(align)) %>% mutate(align=fct_relevel(align, c("lexical", "syntax", "semantic")))
align.labels = c("Lexical", "Syntax", "Semantic")
names(align.labels) = c("lexical", "syntax", "semantic")
ggplot(g1, aes(x=value))+
geom_histogram(binwidth=0.05)+
facet_wrap(~align, labeller = labeller(align = align.labels), scales = "free")+
labs(title="Distribution of Lexical Alignment Scores",x="Align Value (Cosine)", y = "Frequency") +
theme_bw()
ggsave("histogram")
?ggsave
g1 = main.data.20 %>% select(lexical, syntax, semantic) %>% pivot_longer(lexical:semantic, "align") %>% mutate(align=factor(align)) %>% mutate(align=fct_relevel(align, c("lexical", "syntax", "semantic")))
align.labels = c("Lexical", "Syntax", "Semantic")
names(align.labels) = c("lexical", "syntax", "semantic")
ggplot(g1, aes(x=value))+
geom_histogram(binwidth=0.05)+
facet_wrap(~align, labeller = labeller(align = align.labels), scales = "free")+
labs(title="Distribution of Lexical Alignment Scores",x="Align Value (Cosine)", y = "Frequency") +
theme_bw()
ggsave("histogram.pdf")
g1 = main.data.20 %>% select(lexical, syntax, semantic) %>% pivot_longer(lexical:semantic, "align") %>% mutate(align=factor(align)) %>% mutate(align=fct_relevel(align, c("lexical", "syntax", "semantic")))
align.labels = c("Lexical", "Syntax", "Semantic")
names(align.labels) = c("lexical", "syntax", "semantic")
ggplot(g1, aes(x=value))+
geom_histogram(binwidth=0.05)+
facet_wrap(~align, labeller = labeller(align = align.labels), scales = "free")+
labs(title="Distribution of Alignment Scores",x="Align Value (Cosine)", y = "Frequency") +
theme_bw()
ggsave("histogram.pdf")
?plot_model
pg.l = plot_model(g1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
title=c(""),
digits = 3) +
labs(title = "",
subtitle = "Gamma Mixed Effects",
caption = expression(paste("Significance: ***", italic("p"), "<.001, **", italic("p"), "<.001")))
pg.l = pg.l + ylim(.85, 1.15) +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(plot.title=element_text(size=16,face="bold"), # theme_light()
# axis.text.y=element_text(size=12),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
# plot.caption = element_text(hjust = 0),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pg.l + scale_x_continuous(name="Speed of cars")
pg.l = plot_model(g1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
title=c(""),
digits = 3) +
labs(title = "",
subtitle = "Gamma Mixed Effects",
caption = expression(paste("Significance: ***", italic("p"), "<.001, **", italic("p"), "<.001")))
pg.l = pg.l + ylim(.85, 1.15) +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(plot.title=element_text(size=16,face="bold"), # theme_light()
# axis.text.y=element_text(size=12),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
# plot.caption = element_text(hjust = 0),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pg.l
## what do you call the expoentiated coefficient from a continuous outcome of a gamma model? not comparing the odds ratio, but the ratio of the means. Going to just go with "rate ratio" for rate of alignment.
# https://stats.stackexchange.com/questions/504123/terminology-for-exponentiated-coefficients-from-glms-without-a-time-offset/555520#555520
# https://stats.stackexchange.com/questions/487563/term-for-expbeta-from-a-gamma-glm?rq=1
pg.l = plot_model(g1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
title=c(""),
digits = 3) +
labs(title = "",
subtitle = "Gamma Mixed Effects",
caption = expression(paste("Significance: ***", italic("p"), "<.001, **", italic("p"), "<.001")))
pg.l = pg.l + ylim(.85, 1.15) +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(plot.title=element_text(size=16,face="bold"), # theme_light()
# axis.text.y=element_text(size=12),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
# plot.caption = element_text(hjust = 0),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pg.l + scale_x_discrete(name="someting")
## what do you call the expoentiated coefficient from a continuous outcome of a gamma model? not comparing the odds ratio, but the ratio of the means. Going to just go with "rate ratio" for rate of alignment.
# https://stats.stackexchange.com/questions/504123/terminology-for-exponentiated-coefficients-from-glms-without-a-time-offset/555520#555520
# https://stats.stackexchange.com/questions/487563/term-for-expbeta-from-a-gamma-glm?rq=1
pg.l = plot_model(g1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
title=c(""),
digits = 3) +
labs(title = "",
subtitle = "Gamma Mixed Effects",
caption = expression(paste("Significance: ***", italic("p"), "<.001, **", italic("p"), "<.001")))
pg.l = pg.l + ylim(.85, 1.15) +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(plot.title=element_text(size=16,face="bold"), # theme_light()
# axis.text.y=element_text(size=12),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
# plot.caption = element_text(hjust = 0),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pg.l + scale_y_discrete(name="Rate Ratios")
## what do you call the expoentiated coefficient from a continuous outcome of a gamma model? not comparing the odds ratio, but the ratio of the means. Going to just go with "rate ratio" for rate of alignment.
# https://stats.stackexchange.com/questions/504123/terminology-for-exponentiated-coefficients-from-glms-without-a-time-offset/555520#555520
# https://stats.stackexchange.com/questions/487563/term-for-expbeta-from-a-gamma-glm?rq=1
pg.l = plot_model(g1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
title=c(""),
digits = 3) +
labs(title = "",
subtitle = "Gamma Mixed Effects",
caption = expression(paste("Significance: ***", italic("p"), "<.001, **", italic("p"), "<.001")))
pg.l = pg.l + ylim(.85, 1.15) +
scale_y_discrete(name="Rate Ratios") +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(plot.title=element_text(size=16,face="bold"), # theme_light()
# axis.text.y=element_text(size=12),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
# plot.caption = element_text(hjust = 0),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pg.l
## what do you call the expoentiated coefficient from a continuous outcome of a gamma model? not comparing the odds ratio, but the ratio of the means. Going to just go with "rate ratio" for rate of alignment.
# https://stats.stackexchange.com/questions/504123/terminology-for-exponentiated-coefficients-from-glms-without-a-time-offset/555520#555520
# https://stats.stackexchange.com/questions/487563/term-for-expbeta-from-a-gamma-glm?rq=1
pg.l = plot_model(g1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
title=c(""),
digits = 3) +
labs(title = "",
subtitle = "Gamma Mixed Effects",
caption = expression(paste("Significance: ***", italic("p"), "<.001, **", italic("p"), "<.001")))
pg.l = pg.l + ylim(.85, 1.15) +
scale_y_continuous(name="Rate Ratios") +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(plot.title=element_text(size=16,face="bold"), # theme_light()
# axis.text.y=element_text(size=12),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
# plot.caption = element_text(hjust = 0),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pg.l
## what do you call the expoentiated coefficient from a continuous outcome of a gamma model? not comparing the odds ratio, but the ratio of the means. Going to just go with "rate ratio" for rate of alignment.
# https://stats.stackexchange.com/questions/504123/terminology-for-exponentiated-coefficients-from-glms-without-a-time-offset/555520#555520
# https://stats.stackexchange.com/questions/487563/term-for-expbeta-from-a-gamma-glm?rq=1
library(patchwork)
pz.l + pg.l
# ggsave("lexical_forest.pdf")
library(patchwork)
pz.l + pg.l
ggsave("lexical_forest.pdf")
knitr::opts_chunk$set(echo = TRUE)
# rm(list=ls())
library(tidyverse)
library(pander)
main.data = read.csv("../Data/Step1_PrepareFeatures.csv")
# test1 = main.data %>%
#   group_by(Team, School, Block, Level, revisited) %>%
#   filter(n() >= 20) %>%
#   ungroup()
#
# ## remove extraordinarily long single utterances (removes 282 rows, or (282/34294)*100, or less than 1%)
# ## why 71? Because this is 5SDs above mean of utterlen: mean(main.data$utterlen_aligner)+(5*sd(main.data$utterlen_aligner))
# test2 = test1 %>% filter(utterlen_aligner < 71 & utterlen_target < 71)
source("../R_Helper/Step3_helper.R")
main.data.20 = variable_prep(main.data)
pander(names(main.data.20))
# head(main.data.20)
g1 = main.data.20 %>% select(lexical, syntax, semantic) %>% pivot_longer(lexical:semantic, "align") %>% mutate(align=factor(align)) %>% mutate(align=fct_relevel(align, c("lexical", "syntax", "semantic")))
align.labels = c("Lexical", "Syntax", "Semantic")
names(align.labels) = c("lexical", "syntax", "semantic")
ggplot(g1, aes(x=value))+
geom_histogram(binwidth=0.05)+
facet_wrap(~align, labeller = labeller(align = align.labels), scales = "free")+
labs(title="Distribution of Alignment Scores",x="Align Value (Cosine)", y = "Frequency") +
theme_bw()
ggsave("histogram.pdf")
g1 = main.data.20 %>% select(lexical, syntax, semantic)
head(g1)
head(main.data.20)
# library(glmmTMB) ## no longer using
library(lme4) ## for glmer
library(strengejacke) ## for tab_model and plot_model
library(parameters)
library(lmtest) ## for lrtest
library(bbmle) ## for AICtab
GHM.data.20 = main.data.20 %>% mutate(non_zero_lex = ifelse(lexical > 0, 1, 0))
z1.glmer1 <- glmer(non_zero_lex ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept + (1|subject_id), binomial(link = "logit"), data = GHM.data.20)
z1.glmer2 <- glmer(non_zero_lex ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept + (aligner_role|subject_id), binomial(link = "logit"), data = GHM.data.20)
# Method 1: AICtab
AICtab(z1.glmer1,z1.glmer2,logLik=TRUE)
#Method 2: lrtest
lrtest(z1.glmer1,z1.glmer2)
# Method 3: by hand
logLik(z1.glmer1)
logLik(z1.glmer2)
G2 = -2 * logLik(z1.glmer1) + 2 * logLik(z1.glmer2)
pchisq(as.numeric(G2), df=1, lower.tail=F)
# It appears that the more complex random effects structure explains slightly more variance.
summary(z1.glmer2)
z1.glm2 <- glm(non_zero_lex ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept, binomial(link = "logit"), data = GHM.data.20)
# Method 1: AICtab
AICtab(z1.glm2,z1.glmer2,logLik=TRUE)
performance::icc(z1.glmer2)
z1.glmer2.null <- glmer(non_zero_lex ~ 1 + (aligner_role|subject_id), binomial(link = "logit"), data = GHM.data.20)
# Method 1: AICtab
AICtab(z1.glmer2.null,z1.glmer2,logLik=TRUE)
#Method 2: lrtest
lrtest(z1.glmer2.null,z1.glmer2)
model_parameters(z1.glmer2, exponentiate = T, digits=3)
# VarCorr(z1.glmer2)
g1.glmer1 <- glmer(lexical ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept + (1|subject_id), family = Gamma(link = log), data = subset(GHM.data.20, non_zero_lex == 1), control=glmerControl(optimizer="bobyqa"))
g1.glmer2 <- glmer(lexical ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept + (aligner_role|subject_id), family = Gamma(link = log), data = subset(GHM.data.20, non_zero_lex == 1), control=glmerControl(optimizer="bobyqa"))
# Method 1: AICtab
AICtab(g1.glmer1,g1.glmer2,logLik=TRUE)
#Method 2: lrtest
lrtest(g1.glmer1,g1.glmer2)
# Method 3: by hand
logLik(g1.glmer1)
logLik(g1.glmer2)
G2 = -2 * logLik(g1.glmer1) + 2 * logLik(g1.glmer2)
pchisq(as.numeric(G2), df=1, lower.tail=F)
# It appears that the more complex random effects structure explains slightly more variance.
summary(g1.glmer2)
g1.glm2 <- glm(lexical ~ ordering_prop + Block.l + aligner_role + relative_start_timeZ + level_durationZ + utterlen_alignerZ + Concept, family = Gamma(link = log), data = subset(GHM.data.20, non_zero_lex == 1))
# Method 1: AICtab
AICtab(g1.glm2,g1.glmer2,logLik=TRUE)
performance::icc(g1.glmer2)
g1.glmer2.null <- glmer(lexical ~ 1 + (aligner_role|subject_id), family = Gamma(link = log), data = subset(GHM.data.20, non_zero_lex == 1), control=glmerControl(optimizer="bobyqa"))
# Method 1: AICtab
AICtab(g1.glmer2.null,g1.glmer2,logLik=TRUE)
#Method 2: lrtest
lrtest(g1.glmer2.null,g1.glmer2)
model_parameters(g1.glmer2, exponentiate = T, digits=3)
# VarCorr(g1.glmer2)
pz.l = plot_model(z1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
# title=c("Lexical Alignment"),
digits = 3) +
labs(title = "Lexical Alignment",
subtitle = "Binomial Logistic Mixed Effects")
pz.l = pz.l + ylim(.5, 2.5) +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(
plot.title=element_text(size=16,face="bold"), # theme_light()
axis.text.y=element_text(size=12),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pz.l
pg.l = plot_model(g1.glmer2, show.values = TRUE, value.offset = .4,
group.terms = c(1,1,2,2,2,2,2),
rm.terms = c("Block.l.Q"),
axis.labels = c("ordering_prop"="Utterance order", "Block.l.L"="Block (linear trend)", "aligner_rolecontroller"="Role [controller]", "relative_start_timeZ"="Level start time", "level_durationZ"="Level duration", "utterlen_alignerZ"="Utterance length", "ConceptPoT" = "Concept [PoT]"),
title=c(""),
digits = 3) +
labs(title = "",
subtitle = "Gamma Mixed Effects",
caption = expression(paste("Significance: ***", italic("p"), "<.001, **", italic("p"), "<.001")))
pg.l = pg.l + ylim(.85, 1.15) +
scale_y_continuous(name="Rate Ratios") +
geom_hline(yintercept =1, linetype=3) +
theme_bw() +
theme(plot.title=element_text(size=16,face="bold"), # theme_light()
# axis.text.y=element_text(size=12),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(face="bold"),
axis.title=element_text(size=12,face="bold"),
# plot.caption = element_text(hjust = 0),
strip.text.y = element_text(hjust=0,vjust = 1,angle=180,face="bold"))
pg.l
## what do you call the expoentiated coefficient from a continuous outcome of a gamma model? not comparing the odds ratio, but the ratio of the means. Going to just go with "rate ratio" for rate of alignment.
# https://stats.stackexchange.com/questions/504123/terminology-for-exponentiated-coefficients-from-glms-without-a-time-offset/555520#555520
# https://stats.stackexchange.com/questions/487563/term-for-expbeta-from-a-gamma-glm?rq=1
library(patchwork)
alignplot1 = pz.l + pg.l
alignplot1 + plot_annotation(tag_levels = 'A')
# ggsave("lexical_forest.pdf")
# Add as title:
# "For the BLME models, the exponentiated estimates represent incidence rate ratios,,whereas for the GME model they represent rate ratios.
ggsave("lexical_forest.pdf")
